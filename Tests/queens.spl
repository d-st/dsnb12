//
// queens.spl -- the 8-queens problem
//


type A8 = array [8] of int;
type A15 = array [15] of int;


proc main() {
  var row: A8;
  var col: A8;
  var diag1: A15;
  var diag2: A15;
  var i: int;

  i := 0;
  while (i < 8) {
    row[i] := 0;
    col[i] := 0;
    i := i + 1;
  }
  i := 0;
  while (i < 15) {
    diag1[i] := 0;
    diag2[i] := 0;
    i := i + 1;
  }
  try(0, row, col, diag1, diag2);
}


proc try(c: int, ref row: A8, ref col: A8, ref diag1: A15, ref diag2: A15) {
  var r: int;

  if (c = 8) {
    printboard(col);
  } else {
    r := 0;
    while (r < 8) {
      if (row[r] = 0) {
        if (diag1[r + c] = 0) {
          if (diag2[r + 7 - c] = 0) {
            // update
            row[r] := 1;
            diag1[r + c] := 1;
            diag2[r + 7 - c] := 1;
            col[c] := r;
            // try
            try(c + 1, row, col, diag1, diag2);
            // downdate
            row[r] := 0;
            diag1[r + c] := 0;
            diag2[r + 7 - c] := 0;
          }
        }
      }
      r := r + 1;
    }
  }
}


proc printboard(ref col: A8) {
  var i: int;
  var j: int;

  i := 0;
  while (i < 8) {
    j := 0;
    while (j < 8) {
      printc(' ');
      if (col[i] = j) {
        printc('0');
      } else {
        printc('.');
      }
      j := j + 1;
    }
    printc('\n');
    i := i + 1;
  }
  printc('\n');
}
